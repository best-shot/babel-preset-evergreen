const modules = require('core-js-compat/modules.json');

const miniprogramCompat = [
  'es.aggregate-error',
  'es.aggregate-error.cause',
  'es.array-buffer.slice',
  'es.array.at',
  'es.array.find-last',
  'es.array.find-last-index',
  'es.array.push',
  'es.array.reverse',
  'es.array.unscopables.flat',
  'es.array.unscopables.flat-map',
  'es.array.unshift',
  'es.error.cause',
  'es.global-this',
  'es.json.stringify',
  'es.object.from-entries',
  'es.object.has-own',
  'es.promise',
  'es.promise.all-settled',
  'es.promise.any',
  'es.promise.finally',
  'es.reflect.to-string-tag',
  'es.regexp.flags',
  'es.string.at-alternative',
  'es.string.match-all',
  'es.string.replace',
  'es.string.replace-all',
  'es.string.trim',
  'es.string.trim-end',
  'es.symbol.description',
  'es.symbol.match-all',
  'es.typed-array.at',
  'es.typed-array.fill',
  'es.typed-array.find-last',
  'es.typed-array.find-last-index',
  'es.typed-array.float32-array',
  'es.typed-array.float64-array',
  'es.typed-array.from',
  'es.typed-array.int16-array',
  'es.typed-array.int32-array',
  'es.typed-array.int8-array',
  'es.typed-array.of',
  'es.typed-array.set',
  'es.typed-array.sort',
  'es.typed-array.uint16-array',
  'es.typed-array.uint32-array',
  'es.typed-array.uint8-array',
  'es.typed-array.uint8-clamped-array',
  'esnext.aggregate-error',
  'esnext.array.at',
  'esnext.array.find-last',
  'esnext.array.find-last-index',
  'esnext.array.from-async',
  'esnext.array.group',
  'esnext.array.group-by',
  'esnext.array.group-by-to-map',
  'esnext.array.group-to-map',
  'esnext.array.to-reversed',
  'esnext.array.to-sorted',
  'esnext.array.to-spliced',
  'esnext.array.with',
  'esnext.async-iterator.constructor',
  'esnext.async-iterator.drop',
  'esnext.async-iterator.every',
  'esnext.async-iterator.filter',
  'esnext.async-iterator.find',
  'esnext.async-iterator.flat-map',
  'esnext.async-iterator.for-each',
  'esnext.async-iterator.from',
  'esnext.async-iterator.map',
  'esnext.async-iterator.reduce',
  'esnext.async-iterator.some',
  'esnext.async-iterator.take',
  'esnext.async-iterator.to-array',
  'esnext.disposable-stack.constructor',
  'esnext.global-this',
  'esnext.iterator.constructor',
  'esnext.iterator.dispose',
  'esnext.iterator.drop',
  'esnext.iterator.every',
  'esnext.iterator.filter',
  'esnext.iterator.find',
  'esnext.iterator.flat-map',
  'esnext.iterator.for-each',
  'esnext.iterator.from',
  'esnext.iterator.map',
  'esnext.iterator.reduce',
  'esnext.iterator.some',
  'esnext.iterator.take',
  'esnext.iterator.to-array',
  'esnext.iterator.to-async',
  'esnext.object.has-own',
  'esnext.promise.all-settled',
  'esnext.promise.any',
  'esnext.set.difference.v2',
  'esnext.set.intersection.v2',
  'esnext.set.is-disjoint-from.v2',
  'esnext.set.is-subset-of.v2',
  'esnext.set.is-superset-of.v2',
  'esnext.set.symmetric-difference.v2',
  'esnext.set.union.v2',
  'esnext.string.is-well-formed',
  'esnext.string.match-all',
  'esnext.string.replace-all',
  'esnext.string.to-well-formed',
  'esnext.suppressed-error.constructor',
  'esnext.symbol.dispose',
  'esnext.typed-array.at',
  'esnext.typed-array.find-last',
  'esnext.typed-array.find-last-index',
  'esnext.typed-array.to-reversed',
  'esnext.typed-array.to-sorted',
  'esnext.typed-array.to-spliced',
  'esnext.typed-array.with',
];

const mini = [
  ...new Set(
    miniprogramCompat.flatMap((item) => [
      item,
      item.replace('esnext.', 'es.'),
      item.replace('es.', 'esnext.'),
    ]),
  ),
].sort();

exports.excludeIfMini = mini.filter((item) => modules.includes(item));
